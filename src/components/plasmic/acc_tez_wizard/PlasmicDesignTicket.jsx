// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 68wGqrWvUbUk9uG76N3xHk
// Component: RhhJfeaiI6H
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import TitleText from "../../TitleText"; // plasmic-import: JUWhA5Wcld/component
import TextInput from "../../TextInput"; // plasmic-import: UzcYFC-NJii/component
import Button from "../../Button"; // plasmic-import: UCG438gq_ly/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: 68wGqrWvUbUk9uG76N3xHk/projectcss
import sty from "./PlasmicDesignTicket.module.css"; // plasmic-import: RhhJfeaiI6H/css
import WizardSvgrepoComsvg2Icon from "../blank_project/icons/PlasmicIcon__WizardSvgrepoComsvg2"; // plasmic-import: ppcK-LiUA7/icon
import image29Wv2XxCk from "./images/image2.png"; // plasmic-import: 9WV2_XXCk/picture
import imageT35Ygcjt from "./images/image.png"; // plasmic-import: t35-ygcjt/picture
import screenShot20220619At70250PMpngCyEWdgYSm from "../blank_project/images/screenShot20220619At70250PMpng.png"; // plasmic-import: cyEWdgYSm/picture

export const PlasmicDesignTicket__VariantProps = new Array();

export const PlasmicDesignTicket__ArgProps = new Array();

export const defaultDesignTicket__Args = {};

function PlasmicDesignTicket__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultDesignTicket__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"columns"}
            data-plasmic-override={overrides.columns}
            className={classNames(projectcss.all, sty.columns)}
          >
            <div className={classNames(projectcss.all, sty.column__gxNs)}>
              <div className={classNames(projectcss.all, sty.freeBox__dcm79)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___7KdNw)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {"Design Ticket"}
                  </h1>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fklMo
                    )}
                  >
                    {
                      "Here you can design the ticket your users will have delivered to their Apple Wallets."
                    }
                  </div>

                  <TitleText
                    data-plasmic-name={"titleInput"}
                    data-plasmic-override={overrides.titleInput}
                    className={classNames("__wab_instance", sty.titleInput)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__wRixf)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___3JRaY)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"241px"}
                      loading={"lazy"}
                      src={{
                        src: image29Wv2XxCk,
                        fullWidth: 400,
                        fullHeight: 400,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    className={classNames("__wab_instance", sty.textInput)}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tWvKw)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: imageT35Ygcjt,
                      fullWidth: 230,
                      fullHeight: 58,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    data-plasmic-name={"ticketBg"}
                    data-plasmic-override={overrides.ticketBg}
                    className={classNames(projectcss.all, sty.ticketBg)}
                  />
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rb5Qt)}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__nyJnp)}
                    color={"link"}
                  >
                    {"Skip"}
                  </Button>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__dVpJ2)}
                  />

                  <Button
                    className={classNames("__wab_instance", sty.button__dINfx)}
                  >
                    {"Back"}
                  </Button>

                  <Button
                    className={classNames("__wab_instance", sty.button__sxo1R)}
                  >
                    {"Next"}
                  </Button>
                </p.Stack>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__l6OTo)}>
              <div className={classNames(projectcss.all, sty.freeBox__g3Vl7)}>
                <WizardSvgrepoComsvg2Icon
                  data-plasmic-name={"svg"}
                  data-plasmic-override={overrides.svg}
                  className={classNames(projectcss.all, sty.svg)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mmygt
                  )}
                >
                  {"AccTez Wizard"}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___65ZKa)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: screenShot20220619At70250PMpngCyEWdgYSm,
                    fullWidth: 627,
                    fullHeight: 419,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "columns",
    "h1",
    "titleInput",
    "textInput",
    "textbox",
    "ticketBg",
    "svg"
  ],

  columns: [
    "columns",
    "h1",
    "titleInput",
    "textInput",
    "textbox",
    "ticketBg",
    "svg"
  ],

  h1: ["h1"],
  titleInput: ["titleInput"],
  textInput: ["textInput", "textbox"],
  ticketBg: ["ticketBg"],
  svg: ["svg"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicDesignTicket__ArgProps,
      internalVariantPropNames: PlasmicDesignTicket__VariantProps
    });

    return PlasmicDesignTicket__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDesignTicket";
  } else {
    func.displayName = `PlasmicDesignTicket.${nodeName}`;
  }
  return func;
}

export const PlasmicDesignTicket = Object.assign(
  // Top-level PlasmicDesignTicket renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),
    h1: makeNodeComponent("h1"),
    titleInput: makeNodeComponent("titleInput"),
    textInput: makeNodeComponent("textInput"),
    ticketBg: makeNodeComponent("ticketBg"),
    svg: makeNodeComponent("svg"),
    // Metadata about props expected for PlasmicDesignTicket
    internalVariantProps: PlasmicDesignTicket__VariantProps,
    internalArgProps: PlasmicDesignTicket__ArgProps
  }
);

export default PlasmicDesignTicket;
/* prettier-ignore-end */
